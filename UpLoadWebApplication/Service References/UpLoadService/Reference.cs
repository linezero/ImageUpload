//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17379
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace UpLoadWebApplication.UpLoadService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UpLoadService.IUpLoadService")]
    public interface IUpLoadService {
        
        // CODEGEN: 消息 FileUploadMessage 的包装名称(FileUploadMessage)以后生成的消息协定与默认值(UploadFile)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="UploadFile", ReplyAction="http://tempuri.org/IUpLoadService/UploadFileResponse")]
        UpLoadWebApplication.UpLoadService.UploadResult UploadFile(UpLoadWebApplication.UpLoadService.FileUploadMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileUploadMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileUploadMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int UserId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileData;
        
        public FileUploadMessage() {
        }
        
        public FileUploadMessage(string FileName, int UserId, System.IO.Stream FileData) {
            this.FileName = FileName;
            this.UserId = UserId;
            this.FileData = FileData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadResult {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool Result;
        
        public UploadResult() {
        }
        
        public UploadResult(int Id, bool Result) {
            this.Id = Id;
            this.Result = Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUpLoadServiceChannel : UpLoadWebApplication.UpLoadService.IUpLoadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpLoadServiceClient : System.ServiceModel.ClientBase<UpLoadWebApplication.UpLoadService.IUpLoadService>, UpLoadWebApplication.UpLoadService.IUpLoadService {
        
        public UpLoadServiceClient() {
        }
        
        public UpLoadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UpLoadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpLoadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpLoadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UpLoadWebApplication.UpLoadService.UploadResult UpLoadWebApplication.UpLoadService.IUpLoadService.UploadFile(UpLoadWebApplication.UpLoadService.FileUploadMessage request) {
            return base.Channel.UploadFile(request);
        }
        
        public int UploadFile(string FileName, int UserId, System.IO.Stream FileData, out bool Result) {
            UpLoadWebApplication.UpLoadService.FileUploadMessage inValue = new UpLoadWebApplication.UpLoadService.FileUploadMessage();
            inValue.FileName = FileName;
            inValue.UserId = UserId;
            inValue.FileData = FileData;
            UpLoadWebApplication.UpLoadService.UploadResult retVal = ((UpLoadWebApplication.UpLoadService.IUpLoadService)(this)).UploadFile(inValue);
            Result = retVal.Result;
            return retVal.Id;
        }
    }
}
